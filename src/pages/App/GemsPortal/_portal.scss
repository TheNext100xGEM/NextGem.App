@import "../../../assets/css/mixins/styles";
@import "../../../assets/css/mixins/medias";

$responsiveAside: $xl;

.portal {
  $el: &;
  max-width: 762px;
  margin: 4rem auto 6rem;
  @include max($responsiveAside) {
    padding: 0 2rem;
  }
  display: flex;
  flex-direction: column;
  gap: 2rem;

  .section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .category {
    $el: &;
    position: relative;
    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 85%;
      background-size: contain;
      background-image: var(--category-bg-image);
      background-position: bottom left;
      background-repeat: no-repeat;
      opacity: 0.2;
      z-index: 0;
    }

    .content {
      padding: 2rem 1rem;
      gap: 0.5rem;

      .desc p {
        color: white;
        opacity: 0.7;
      }
    }

    &-light {
      position: absolute;
      inset: 0;
      overflow: hidden;
      pointer-events: 0;
      z-index: 1;

      &::before {
        content: "";
        position: absolute;
        inset: 40% 10% -100%;
        opacity: 0.15;
        background: radial-gradient(var(--category-color) 0%, transparent 70%)
          no-repeat;
        //background: radial-gradient(var(--stroke-color) 0%, transparent 70%) no-repeat;
      }
      &:hover {
        cursor: pointer;
        &::before {
          //@include light-blur;
          inset: 0% 0% -100%;
          opacity: 0.25;
        }
      }
    }
  }

  &-heading {
    display: flex;
    flex-direction: row;
    font-size: large;
    gap: 20px;
    font-size: var(--h3);
    background: linear-gradient(
      var(--text-secondary) 20%,
      var(--text-primary) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-family: var(--font-family-heading);
    font-weight: 700;
  }

  .grid {
    --grid-layout-gap: var(--size-3);
    --grid-column-count: 3;
    --grid-item-min-width: calc(200px + 50 * (100vw - 320px) / 1080);
    --gap-count: calc(var(--grid-column-count) - 1);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item-max-width: calc(
      (100% - var(--total-gap-width)) / var(--grid-column-count)
    );

    display: grid;
    grid-template-columns: repeat(
      auto-fill,
      minmax(max(var(--grid-item-min-width), var(--grid-item-max-width)), 1fr)
    );
    grid-template-rows: auto auto;
    grid-gap: var(--grid-layout-gap);
    overflow: hidden;
  }
}
